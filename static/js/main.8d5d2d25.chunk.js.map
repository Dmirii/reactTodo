{"version":3,"sources":["context.js","todo/todoItem.js","todo/TodoList.js","Modal/modal.js","Loader.js","App.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","marginRight","input","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","textAlign","TodoList","props","todos","map","key","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","margin","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d5d2d25.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context","import React from 'react';\r\nimport {useContext} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../context'\r\n\r\nconst styles = {\r\n    li:{    \r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        padding:'.5rem 1rem',\r\n        border: '1px solid grey',\r\n        borderRadius: '4px',\r\n        marginBottom:'.5rem',\r\n        marginRight:'2rem'\r\n    },\r\n    input:{\r\n        marginRight:'1rem'\r\n    }\r\n}\r\n\r\n\r\n function TodoItem({todo,index , onChange}) {\r\n    const {removeTodo} = useContext(Context);\r\n    const classes =[];\r\n\r\n    if(todo.completed){\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input \r\n                    style={styles.input}\r\n                    type=\"checkbox\"\r\n                    checked={todo.completed}\r\n                    onChange={() => onChange(todo.id)}\r\n                />\r\n                <strong> {index+1} </strong>\r\n                {todo.title}\r\n            </span>\r\n            <button className=\"rm\"  onClick={ removeTodo.bind(null,todo.id)}> &times;</button>\r\n            \r\n        \r\n        </li>\r\n    )\r\n    \r\n}\r\n\r\nTodoItem.propTypes ={\r\n    todo:PropTypes.object.isRequired,\r\n    index:PropTypes.number,\r\n    onChange:PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport TodoItem from './todoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles ={\r\n    ul:{\r\n        listStyle: 'none',\r\n        textAlign:'left',\r\n        \r\n    }\r\n}\r\n function TodoList(props) { \r\n\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {\r\n                props.todos.map((todo,index) => {\r\n                    return  <TodoItem \r\n                            todo={todo} \r\n                            key={todo.id} \r\n                            index={index} \r\n                            onChange={props.onToggle}\r\n                             />\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n }\r\n\r\n TodoList.propTypes ={\r\n     todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n     onToggle:PropTypes.func.isRequired\r\n\r\n }\r\n\r\n export default TodoList","import React from 'react';\r\nimport './modal.css';\r\n\r\nexport default class Modal extends React.Component{\r\n    state ={\r\n        isOpen:false,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n            <button onClick={() =>{\r\n                this.setState({isOpen:true})\r\n            }}> Open Modal</button>\r\n            {this.state.isOpen ? \r\n            (<div className=\"modal\">\r\n                <div className=\"modal-body\">\r\n                    <h1>Modal title</h1>\r\n                    <p> test text</p>\r\n                    <button onClick ={ () =>{\r\n                        this.setState({isOpen:false})\r\n                    }\r\n                    }>Close modal</button>\r\n                </div>\r\n            </div>) : ''}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\n\r\nexport default () => <div style={\r\n    {\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        margin:'5rem'\r\n    }\r\n}>\r\n                        <div className=\"lds-roller\">\r\n                        <div></div><div></div><div></div><div></div>\r\n                        <div></div><div></div><div></div><div></div></div>\r\n                    </div>","import React from 'react';\nimport TodoList from './todo/TodoList';\nimport Context from './context';\nimport './App.css';\nimport Modal from './Modal/modal'\nimport {useEffect} from 'react';\nimport Loader from './Loader'\n\nconst AddTodo  =React.lazy(() => new Promise(resolve => {\n  setTimeout(() =>{\n    resolve(import('./todo/AddTodo'));\n  },2000)\n}))\n\nfunction App() {\n \n  const [todos, setTodos] = React.useState([]);\n  const [loading,setLoading] = React.useState(true)\n\n\nuseEffect(() => {\n  fetch('https://jsonplaceholder.typicode.com/todos?_limit=8')\n  .then(response => response.json())\n  .then(todos => {\n    setTimeout(() => {\n      setTodos(todos);\n      setLoading(false)\n    }, 2000);\n    \n  })\n}, []);\n\n\nfunction toggleTodo(id){\n  setTodos(todos.map(todo =>{\n    if(todo.id === id){\n      todo.completed = !todo.completed\n    }\n    return todo\n  }))\n}\n\n\nfunction removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n}\n\n\n\nfunction addTodo(title) { \n  setTodos(todos.concat([{\n    title,\n    id: Date.now(),\n    completed:false \n  }]))\n\n }\n\n  return (\n\n    \n    <Context.Provider value={{removeTodo: removeTodo}}>\n      \n    <div className=\"App wrapper\">\n   \n      <h1> Todo list:</h1>\n      <Modal/>\n      <React.Suspense fallback={<p> component loading... </p>}>\n        <AddTodo onCreate={addTodo}/>\n      </React.Suspense>\n      \n      {loading && <Loader/>}\n        {todos.length\n            ? <TodoList todos={todos} onToggle={toggleTodo} />\n            : loading ? null: <p> to-do list is empty</p>\n        }\n    \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>           \n \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}